{"version":3,"sources":["app/hooks.ts","features/actualUser.tsx","components/RegisterNewUser/RegisterNewUser.tsx","components/Loader/Loader.tsx","features/actualBet.tsx","components/Bets/Bets.tsx","components/DealerCards/DealerCards.tsx","components/MyCards/MyCards.tsx","features/startedGame.tsx","features/actualBalance.tsx","components/GamePage/GamePage.tsx","App.tsx","app/store.ts","index.tsx"],"names":["useAppSelector","useSelector","useAppDispatch","useDispatch","actualUserSlice","createSlice","name","initialState","actualUser","reducers","setActualUser","state","action","payload","actions","RegisterNewUser","useState","playerName","setPlayerName","error","setError","dispatch","className","type","placeholder","minLength","value","onChange","e","target","onClick","length","actualUserActions","userName","money","Loader","data-cy","actualBetSlice","actualBet","setActualBet","Bets","startedGame","actualBalance","decreaseBet","decreaseBetAmount","actualBetActions","onContextMenu","preventDefault","DealerCards","cards","sum","map","card","src","alt","MyCards","startedGameSlice","setStartedGame","actualBalanceSlice","setActualBalance","GamePage","isLoading","setIsLoading","dealerCards","setDealerCards","myCards","setMyCards","mySum","setMySum","dealerSum","setDealerSum","finishedGame","setFinishedGame","youLost","setYouLost","youWon","setYouWon","youPushed","setYouPushed","bj","setBj","deck","setDeck","hiddenCard","setHiddenCard","getValue","count","i","split","openHiddenCard","updatedCards","shift","dealerMove","updatedDeck","pop","push","useEffect","buildDeck","newDeck","values","forEach","startDeck","myStartCards","hidden","dealerStartCards","dealerStartCard","startGame","sort","Math","random","startedGameActions","setTimeout","actualBalanceActions","disabled","hit","App","rootReducer","combineReducers","actualUserReducer","startedGameReducer","actualBalanceReducer","actualBetReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.41e1b83a.chunk.js","sourcesContent":["import { useDispatch, TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport const useAppDispatch: () => AppDispatch = useDispatch;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { User } from '../types/User';\n\ntype ActualUser = {\n  actualUser: User | null,\n};\n\nconst initialState: ActualUser = {\n  actualUser: null,\n};\n\nconst actualUserSlice = createSlice({\n  name: 'actaulUser',\n  initialState,\n  reducers: {\n    setActualUser: (state, action: PayloadAction<User>) => {\n      return {\n        ...state,\n        actualUser: action.payload,\n      };\n    },\n  },\n});\n\nexport default actualUserSlice.reducer;\nexport const { actions } = actualUserSlice;\n","import React, { useState } from 'react';\nimport './RegisterNewUser.scss';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as actualUserActions } from '../../features/actualUser';\n\nexport const RegisterNewUser: React.FC = () => {\n  const [playerName, setPlayerName] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const dispatch = useAppDispatch();\n\n  const signIn = () => {\n    if (playerName.length < 4) {\n      return setError('Your name have less than 4 characters!');\n    }\n\n    return dispatch(actualUserActions.setActualUser(\n      {\n        userName: playerName,\n        money: 100,\n      },\n    ));\n  };\n\n  return (\n    <div className=\"registerNewUser\">\n      <div>Sign up new player!</div>\n\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Enter your name\"\n        minLength={4}\n        value={playerName}\n        onChange={(e) => {\n          setPlayerName(e.target.value);\n          setError('');\n        }}\n      />\n\n      <button\n        type=\"button\"\n        className=\"button is-primary\"\n        onClick={() => signIn()}\n      >\n        Sign up\n      </button>\n\n      {error && (\n        <div className=\"notification is-warning registerNewUser__notification\">\n          {error}\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ntype ActualBet = {\n  actualBet: number\n};\n\nconst initialState: ActualBet = {\n  actualBet: 1,\n};\n\nconst actualBetSlice = createSlice({\n  name: 'actaulBet',\n  initialState,\n  reducers: {\n    setActualBet: (state, action: PayloadAction<number>) => {\n      return {\n        ...state,\n        actualBet: action.payload,\n      };\n    },\n  },\n});\n\nexport default actualBetSlice.reducer;\nexport const { actions } = actualBetSlice;\n","import React from 'react';\nimport './Bets.scss';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as actualBetActions } from '../../features/actualBet';\n\nexport const Bets:React.FC = () => {\n  const { startedGame } = useAppSelector(state => state.startedGame);\n  const { actualBet } = useAppSelector(state => state.actualBet);\n  const { actualBalance } = useAppSelector(state => state.actualBalance);\n  const dispatch = useAppDispatch();\n\n  const decreaseBet = (decreaseBetAmount: number) => {\n    if (decreaseBetAmount < actualBet) {\n      return dispatch(actualBetActions.setActualBet(actualBet - decreaseBetAmount));\n    }\n\n    return null;\n  };\n\n  return (\n    <div className=\"bets\">\n      <div className=\"bets__bet\">\n        <p className=\"bets__startBet\">{`Your bet is $${actualBet}`}</p>\n\n        <p className=\"bets__startBet\">{`My balance is $${actualBalance}`}</p>\n\n        {startedGame && (\n          <div className=\"bets__chips\">\n            <button\n              type=\"button\"\n              className=\"bets__chip bets__chip--1\"\n              onClick={() => {\n                if (actualBalance >= 1 && actualBalance >= actualBet + 1) {\n                  dispatch(actualBetActions.setActualBet(actualBet + 1));\n                }\n              }}\n              onContextMenu={(e) => {\n                e.preventDefault();\n                decreaseBet(1);\n              }}\n            >\n            </button>\n            <button\n              type=\"button\"\n              className=\"bets__chip bets__chip--10\"\n              onClick={() => {\n                if (actualBalance >= 10 && actualBalance >= actualBet + 10) {\n                  dispatch(actualBetActions.setActualBet(actualBet + 10));\n                }\n              }}\n              onContextMenu={(e) => {\n                e.preventDefault();\n                decreaseBet(10);\n              }}\n            >\n            </button>\n            <button\n              type=\"button\"\n              className=\"bets__chip bets__chip--100\"\n              onClick={() => {\n                if (actualBalance >= 100 && actualBalance >= actualBet + 100) {\n                  dispatch(actualBetActions.setActualBet(actualBet + 100));\n                }\n              }}\n              onContextMenu={(e) => {\n                e.preventDefault();\n                decreaseBet(100);\n              }}\n            >\n            </button>\n            <button\n              type=\"button\"\n              className=\"bets__chip bets__chip--500\"\n              onClick={() => {\n                if (actualBalance >= 500 && actualBalance >= actualBet + 500) {\n                  dispatch(actualBetActions.setActualBet(actualBet + 500));\n                }\n              }}\n              onContextMenu={(e) => {\n                e.preventDefault();\n                decreaseBet(500);\n              }}\n            >\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './DealerCards.scss';\n\ntype Props = {\n  cards: string[],\n  sum: number,\n};\n\nexport const DealerCards: React.FC<Props> = ({ cards, sum }) => {\n  return (\n    <div className=\"dealerCards\">\n      <div className=\"dealerCards__text\">\n        <h3>Dealer cards</h3>\n\n        <p>{sum}</p>\n      </div>\n\n      <div className=\"dealerCards__cards\">\n        {cards.map(card => (\n          <img\n            key={card}\n            src={`./images/cards/${card}.png`}\n            alt=\"firstCard\"\n            className=\"dealerCards__card\"\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MyCards.scss';\n\ntype Props = {\n  cards: string[],\n  sum: number,\n};\n\nexport const MyCards:React.FC<Props> = ({ cards, sum }) => {\n  return (\n    <div className=\"myCards\">\n      <div className=\"myCards__text\">\n        <h3>My cards</h3>\n\n        <p>{sum}</p>\n      </div>\n\n      <div className=\"myCards__cards\">\n        {cards.map(card => (\n          <img\n            key={card}\n            src={`./images/cards/${card}.png`}\n            alt=\"card\"\n            className=\"myCards__card\"\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ntype StartedGame = {\n  startedGame: boolean\n};\n\nconst initialState: StartedGame = {\n  startedGame: false,\n};\n\nconst startedGameSlice = createSlice({\n  name: 'startedGame',\n  initialState,\n  reducers: {\n    setStartedGame: (state, action: PayloadAction<boolean>) => {\n      return {\n        ...state,\n        startedGame: action.payload,\n      };\n    },\n  },\n});\n\nexport default startedGameSlice.reducer;\nexport const { actions } = startedGameSlice;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ntype ActualBalance = {\n  actualBalance: number\n};\n\nconst initialState: ActualBalance = {\n  actualBalance: 100,\n};\n\nconst actualBalanceSlice = createSlice({\n  name: 'actaulBalance',\n  initialState,\n  reducers: {\n    setActualBalance: (state, action: PayloadAction<number>) => {\n      return {\n        ...state,\n        actualBalance: action.payload,\n      };\n    },\n  },\n});\n\nexport default actualBalanceSlice.reducer;\nexport const { actions } = actualBalanceSlice;\n","/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\nimport './GamePage.scss';\nimport { Loader } from '../Loader';\nimport { Bets } from '../Bets/Bets';\nimport { DealerCards } from '../DealerCards/DealerCards';\nimport { MyCards } from '../MyCards/MyCards';\nimport { actions as startedGameActions } from '../../features/startedGame';\nimport { actions as actualBalanceActions } from '../../features/actualBalance';\nimport { actions as actualBetActions } from '../../features/actualBet';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\nexport const GamePage: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const { startedGame } = useAppSelector(state => state.startedGame);\n  const dispatch = useAppDispatch();\n  const [dealerCards, setDealerCards] = useState<string[]>([]);\n  const [myCards, setMyCards] = useState<string[]>([]);\n  const [mySum, setMySum] = useState<number>(0);\n  const [dealerSum, setDealerSum] = useState<number>(0);\n  const [finishedGame, setFinishedGame] = useState<boolean>(false);\n  const [youLost, setYouLost] = useState<boolean>(false);\n  const [youWon, setYouWon] = useState<boolean>(false);\n  const [youPushed, setYouPushed] = useState<boolean>(false);\n  const [bj, setBj] = useState<boolean>(false);\n  const [deck, setDeck] = useState<string[]>([]);\n  const [hiddenCard, setHiddenCard] = useState<string>('');\n  const { actualBalance } = useAppSelector(state => state.actualBalance);\n  const { actualBet } = useAppSelector(state => state.actualBet);\n\n  const getValue = (cards: string[]) => {\n    let count = 0;\n\n    for (let i = 0; i < cards.length; i += 1) {\n      const data = cards[i].split('-');\n      const value = data[0];\n\n      if (value === 'BACK') {\n        count += 0;\n      } else if (value === 'A') {\n        count += 11;\n      } else if (value === 'K' || value === 'J' || value === 'Q') {\n        count += 10;\n      } else {\n        count += +value;\n      }\n    }\n\n    return count;\n  };\n\n  const openHiddenCard = () => {\n    const updatedCards = [...dealerCards];\n\n    updatedCards.shift();\n    setDealerCards([\n      hiddenCard,\n      ...updatedCards,\n    ]);\n\n    setDealerSum(dealerSum + getValue([hiddenCard]));\n  };\n\n  const startGame = (startDeck: string[]) => {\n    const updatedDeck = [...startDeck];\n    const myStartCards = [];\n    const hidden = updatedDeck.pop() || '';\n    const dealerStartCards = ['BACK'];\n    const dealerStartCard = updatedDeck.pop() || '';\n\n    dealerStartCards.push(dealerStartCard);\n\n    for (let i = 0; i < 2; i += 1) {\n      const card = updatedDeck.pop() || '';\n\n      myStartCards.push(card);\n    }\n\n    setMyCards(myStartCards);\n    setDealerCards(dealerStartCards);\n    setDeck(updatedDeck);\n    setHiddenCard(hidden);\n    setMySum(getValue(myStartCards));\n    setDealerSum(getValue(dealerStartCards));\n\n    if (getValue(myStartCards) === 21) {\n      setBj(true);\n      setYouWon(true);\n    }\n  };\n\n  const hit = () => {\n    const updatedDeck = [...deck];\n    const card = updatedDeck.pop() || '';\n\n    setMyCards([\n      ...myCards,\n      card,\n    ]);\n    setDeck(updatedDeck);\n    setMySum(mySum + getValue([card]));\n\n    if (mySum + getValue([card]) > 21) {\n      setFinishedGame(true);\n      openHiddenCard();\n      setYouLost(true);\n    }\n\n    if (mySum + getValue([card]) === 21) {\n      setFinishedGame(true);\n      openHiddenCard();\n    }\n  };\n\n  const checkScore = (sum: number) => {\n    if (sum < mySum || sum > 21) {\n      setYouWon(true);\n    } else if (sum === mySum) {\n      setYouPushed(true);\n    } else {\n      setYouLost(true);\n    }\n  };\n\n  const dealerMove = () => {\n    const updatedDeck = [...deck];\n    let value = dealerSum;\n    const cards = [];\n\n    while (value < 17) {\n      const card = deck.pop() || '';\n\n      value += getValue([card]);\n      cards.push(card);\n    }\n\n    setDealerCards([...dealerCards, ...cards]);\n    setDeck(updatedDeck);\n    setDealerSum(value);\n    checkScore(value);\n  };\n\n  useEffect(() => {\n    if (finishedGame && mySum <= 21) {\n      dealerMove();\n    }\n  }, [finishedGame]);\n\n  const buildDeck = () => {\n    const newDeck: string[] = [];\n    const values = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'];\n    const types = ['C', 'D', 'H', 'S'];\n\n    types.forEach(type => {\n      values.forEach(value => {\n        newDeck.push(`${value}-${type}`);\n      });\n    });\n    const shuffledDeck = newDeck.sort(() => Math.random() - 0.5);\n\n    startGame(shuffledDeck);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    dispatch(startedGameActions.setStartedGame(true));\n\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n\n  return (\n    isLoading\n      ? <Loader />\n      : (\n        <>\n          {youLost && (\n            <div className=\"gamePage__notification notification is-warning\">\n              You lost!\n\n              <button\n                type=\"button\"\n                className=\"gamePage__button button is-success is-medium\"\n                onClick={() => {\n                  setYouLost(false);\n                  setFinishedGame(false);\n                  dispatch(actualBetActions.setActualBet(1));\n                  dispatch(startedGameActions.setStartedGame(true));\n\n                  if (actualBalance === 0) {\n                    dispatch(actualBalanceActions.setActualBalance(10));\n                  }\n                }}\n              >\n                New game\n              </button>\n            </div>\n          )}\n\n          {youPushed && (\n            <div className=\"gamePage__notification notification is-success\">\n              Push!\n\n              <button\n                type=\"button\"\n                className=\"gamePage__button button is-info\"\n                onClick={() => {\n                  setYouPushed(false);\n                  setFinishedGame(false);\n                  dispatch(actualBetActions.setActualBet(1));\n                  dispatch(actualBalanceActions.setActualBalance(actualBalance + actualBet));\n                  dispatch(startedGameActions.setStartedGame(true));\n                }}\n              >\n                New game\n              </button>\n            </div>\n          )}\n\n          {youWon && (\n            <div className=\"gamePage__notification notification is-success\">\n              {bj && (<p>Black Jack!!!</p>)}\n\n              <p>You win!</p>\n\n              <button\n                type=\"button\"\n                className=\"gamePage__button button is-info\"\n                onClick={() => {\n                  setFinishedGame(false);\n                  dispatch(actualBetActions.setActualBet(1));\n                  dispatch(actualBalanceActions.setActualBalance(actualBalance + actualBet * 2));\n                  dispatch(startedGameActions.setStartedGame(true));\n                  setYouWon(false);\n                  setBj(false);\n                }}\n              >\n                New game\n              </button>\n            </div>\n          )}\n          <div className=\"gamePage\">\n            <h1 className=\"gamePage__title\">Black Jack</h1>\n\n            {!startedGame && (\n              <div\n                className=\"gamePage__cards\"\n              >\n                <DealerCards cards={dealerCards} sum={dealerSum} />\n\n                <MyCards cards={myCards} sum={mySum} />\n              </div>\n            )}\n\n            <div className=\"gamePage__buttons\">\n              {startedGame\n                ? (\n                  <div className=\"gamePage__deal\">\n                    <button\n                      type=\"button\"\n                      className=\"gamePage__button button is-success is-medium\"\n                      onClick={() => {\n                        dispatch(startedGameActions.setStartedGame(false));\n                        dispatch(actualBalanceActions.setActualBalance(actualBalance - actualBet));\n                        buildDeck();\n                      }}\n                    >\n                      Deal\n                    </button>\n\n                    <p className=\"gamePage__text\">Place your bet</p>\n                  </div>\n                )\n                : (\n                  <>\n                    <button\n                      type=\"button\"\n                      className=\"gamePage__button button is-success is-medium\"\n                      disabled={finishedGame || bj}\n                      onClick={() => hit()}\n                    >\n                      Hit\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"gamePage__button button is-warning is-medium\"\n                      onClick={() => {\n                        setFinishedGame(true);\n                        openHiddenCard();\n                      }}\n                      disabled={finishedGame || bj}\n                    >\n                      Stand\n                    </button>\n                  </>\n                )}\n            </div>\n\n            <Bets />\n          </div>\n        </>\n      )\n  );\n};\n","import React from 'react';\nimport { RegisterNewUser } from './components/RegisterNewUser/RegisterNewUser';\nimport { useAppSelector } from './app/hooks';\nimport { GamePage } from './components/GamePage/GamePage';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const { actualUser } = useAppSelector(state => state.actualUser);\n\n  return (\n    <div className=\"app\">\n      {!actualUser\n        ? <RegisterNewUser />\n        : <GamePage />}\n    </div>\n  );\n};\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport actualUserReducer from '../features/actualUser';\nimport actualBalanceReducer from '../features/actualBalance';\nimport actualBetReducer from '../features/actualBet';\nimport startedGameReducer from '../features/startedGame';\n\nconst rootReducer = combineReducers({\n  actualUser: actualUserReducer,\n  startedGame: startedGameReducer,\n  actualBalance: actualBalanceReducer,\n  actualBet: actualBetReducer,\n});\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport default store;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { App } from './App';\nimport store, { persistor } from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}